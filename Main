// Code by Rodders
//
//copied from Element14 Community: Peter the Pumpkin
//
//For Element14, WishBoxes and LED Challenge Xmas 2018/19


#include <Adafruit_NeoPixel.h>


#define WS2812_PIN 7

#define numTail 50

#define tailFeedIn 4
#define PIXELCOUNT 50


#define NUM_LEDS 20 //not used?

// Parameter 1 = number of pixels in strip
// Parameter 2 = pin number (most are valid)
// Parameter 3 = pixel type flags, add together as needed:
//   NEO_KHZ800  800 KHz bitstream (most NeoPixel products w/WS2812 LEDs)
//   NEO_KHZ400  400 KHz (classic 'v1' (not v2) FLORA pixels, WS2811 drivers)
//   NEO_GRB     Pixels are wired for GRB bitstream (most NeoPixel products)
//   NEO_RGB     Pixels are wired for RGB bitstream (v1 FLORA pixels, not v2)
Adafruit_NeoPixel strip = Adafruit_NeoPixel(PIXELCOUNT, WS2812_PIN, NEO_GRB + NEO_KHZ800);

#define BAUDRATE (9600)


enum  mode_t{
  WS2812test=1,
  FireworkFSR=2,
};

enum  mode_FSR{
  PreDelay=1,
  Ignite=2,
  PreDelay2=3,
  Explode=4,
};

struct pixel {
  byte red;
  byte green;
  byte blue;
};


enum mode_t thisMode=FireworkFSR;
enum mode_FSR currentFSR=PreDelay;
struct pixel pixelArrayTail[numTail + tailFeedIn];

/*******************************************
*             ARDUINO SETUP
********************************************/
void setup() {
   
  pinMode(WS2812_PIN,OUTPUT); 
  strip.begin();
  strip.show(); // Initialize all pixels to 'off'

  Serial.begin(BAUDRATE);
  Serial.print("Welcome to WS2811 Test.");
  
}

/*******************************************
*             MAIN LOOP
********************************************/
void loop() {

  /*******************************************
  *             TEST WS2812
  ********************************************/
  //WS2812 test
  if (thisMode==WS2812test){
    
    uint32_t greenishwhite = strip.Color(0, 64, 0);
    int iRed;
    int iGreen;
    int iBlue;
    int step=2;

    for (int i=0; i<PIXELCOUNT; i++){
      strip.setPixelColor(i, iRed, iGreen, iBlue);    
    }    
    strip.show();

    while(1){

      iRed=0;
      iGreen=255;
      iBlue=0;
      
      for (int i=255; i>0; i=i-1){
        if (iRed>step) iRed=iRed-step;
        if (iGreen>step) iGreen=iGreen-step;
        if (iBlue>step) iBlue=iBlue-step;
        
      for (int i=0; i<PIXELCOUNT; i++){
        strip.setPixelColor(i, iRed, iGreen, iBlue);    
      } 
        strip.show();
        delay(10);
      }
      
  }//while (1)  
}////WS2812 test


/*******************************************
*             FIREWORK FSR
********************************************/
if (thisMode==FireworkFSR){
  long randNumber;

  switch(currentFSR){

    case PreDelay:
      randNumber = random(5000, 10000);
      delay(randNumber);
      currentFSR=Ignite;
      break;

    case Ignite: //the effect where the rocket flies into the sky, slows and dims
      RomanCandle();
      currentFSR=PreDelay;
      break;
  }  
}
}//loop


/*******************************************
*             CANDLE SHOOT UPWARD
********************************************/
void RomanCandle(){

double dimFactor = 1;

  int shootUpDelay;
  //shootUpDelay = random(10, 50);
  shootUpDelay=20;
  int shotDelay=1250;
  int colours;

  int numShots;
  numShots = random(4, 7);

  for (int shot=0; shot<numShots; shot++){
  
    colours = random(0, 7);
      //preload the start N bytes of the array
      if (colours==0){
        pixelArrayTail[0]={30,0,0};
        pixelArrayTail[1]={100,0,0};
        pixelArrayTail[2]={150,0,0};
        pixelArrayTail[3]={255,0,0};
      }
      else if(colours==1){
        pixelArrayTail[0]={0,30,0};
        pixelArrayTail[1]={0,100,0};
        pixelArrayTail[2]={0,150,0};
        pixelArrayTail[3]={0,2550,0};
      }
      else if(colours==2){
        pixelArrayTail[0]={0,0,30};
        pixelArrayTail[1]={0,0,100};
        pixelArrayTail[2]={0,0,150};
        pixelArrayTail[3]={0,0,255};
      }
      else if(colours==3){
        pixelArrayTail[0]={30,30,30};
        pixelArrayTail[1]={100,100,100};
        pixelArrayTail[2]={150,150,150};
        pixelArrayTail[3]={255,255,255};
      }
      else if(colours==4){
        pixelArrayTail[0]={0,30,30};
        pixelArrayTail[1]={0,100,100};
        pixelArrayTail[2]={0,150,150};
        pixelArrayTail[3]={0,255,255};
      }
      else if(colours==5){
        pixelArrayTail[0]={30,0,30};
        pixelArrayTail[1]={100,0,100};
        pixelArrayTail[2]={150,0,150};
        pixelArrayTail[3]={255,0,255};
      }
      else{
        pixelArrayTail[0]={30,30,0};
        pixelArrayTail[1]={100,100,0};
        pixelArrayTail[2]={150,150,0};
        pixelArrayTail[3]={255,255,0};
      }
        
      for (int i=tailFeedIn; i<(numTail+tailFeedIn); i++){
        pixelArrayTail[i]={0,0,0};   
      }
  
      //Loop and display as shuffled along
      for (int i=0; i<(numTail+tailFeedIn); i++){
        //Output the array
        for (int j=0; j<numTail; j++){
        //for (int j=numTail-1; j>-1; j--){  
          setPixel(j, pixelArrayTail[j+tailFeedIn].red,  pixelArrayTail[j+tailFeedIn].green,  pixelArrayTail[j+tailFeedIn].blue); 
        }//j1
        showStrip();
        delay(shootUpDelay);
        //shootUpDelay=shootUpDelay+1;
        //Shuffle the array along
        for (int j=(numTail+tailFeedIn-1); j>0; j--){
          pixelArrayTail[j+1].red = (int) pixelArrayTail[j].red * dimFactor;
          pixelArrayTail[j+1].green = (int) pixelArrayTail[j].green * dimFactor;
          pixelArrayTail[j+1].blue = (int) pixelArrayTail[j].blue * dimFactor;  
        }//j2    
        pixelArrayTail[1]={0,0,0};
        pixelArrayTail[0]={0,0,0};
      }//i
    
  }//next shot
  delay(shotDelay);
  
}



void showStrip() {

 #ifdef ADAFRUIT_NEOPIXEL_H

   // NeoPixel
   strip.show();
 #endif

 #ifndef ADAFRUIT_NEOPIXEL_H

   // FastLED
   FastLED.show();
 #endif

}

void setPixel(int Pixel, byte red, byte green, byte blue) {

 #ifdef ADAFRUIT_NEOPIXEL_H

   // NeoPixel
   strip.setPixelColor(Pixel, strip.Color(red, green, blue));

 #endif

 #ifndef ADAFRUIT_NEOPIXEL_H

   // FastLED
   leds[Pixel].r = red;
   leds[Pixel].g = green;
   leds[Pixel].b = blue;

 #endif

}

void setAll(byte red, byte green, byte blue) {

  for(int i = 0; i < NUM_LEDS; i++ ) {
    setPixel(i, red, green, blue); 
  }

  showStrip();
}
